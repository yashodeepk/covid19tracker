{"version":3,"sources":["components/card/card.module.css","components/card/card.js","api/api.js","components/chart/chart.js","components/countryPicker/countryPicker.js","App.js","index.js","App.module.css","components/chart/chart.module.css","components/countryPicker/countryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleChangeCountry","fetchedCountries","setFetchedCountries","fetchCountriesAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","header","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02a3c730.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"card_container__2_jNj\",\"card\":\"card_card__1n-tR\",\"infected\":\"card_infected__3xPxW\",\"recovered\":\"card_recovered__4_PVb\",\"deaths\":\"card_deaths__3LyBH\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid }  from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './card.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data : {confirmed, recovered, deaths, lastUpdate}}) => {\r\n\tif(!confirmed)\r\n\t{\r\n\t\treturn 'Loading...';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className = {styles.container}>\r\n\t\t<Grid container spacing={3} justify=\"center\">\r\n\t\t\t<Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.infected)}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t<CountUp start ={0} end = {confirmed.value} duration = {2.5} separator = \",\" />\t\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.recovered)}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t<CountUp start ={0} end = {recovered.value} duration = {2.5} separator = \",\" />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item component={Card} xs={12} md={3} className = {cx(styles.card, styles.deaths)}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\r\n\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t<CountUp start ={0} end = {deaths.value} duration = {2.5} separator = \",\" />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n\tlet changeableURL = url;\r\n\r\n\tif(country)\r\n\t{\r\n\t\tchangeableURL = url + '/countries/' + country;\r\n\t}\r\n\r\n\ttry{\r\n\t\tconst { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableURL);\r\n\t\t//console.log(response);\r\n\t\treturn {confirmed, recovered, deaths, lastUpdate};\r\n\t}\r\n\tcatch(error)\r\n\t{\r\n\t\tconsole.log(error);\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry{\r\n\t\tconst { data } = await axios.get(url + '/daily');\r\n\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate, \r\n\t\t}));\r\n\t\treturn modifiedData;\r\n\t}\r\n\tcatch(error)\r\n\t{\r\n\r\n\t}\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n\ttry{\r\n\t\tconst {data: { countries }} = await axios.get(url+ '/countries');\r\n\r\n\t\treturn countries.map((country) => country.name);\r\n\t}\r\n\tcatch(error) {\r\n\t\tconsole.log(error);\r\n\t}\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchDailyData} from '../../api/api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\tconst [dailyData, setDailyData] = useState({});\r\n\t\r\n\tuseEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\nconst barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n\tconst lineChart = (\r\n\t\tdailyData[0] ? ( \r\n\t\t\t<Line\r\n\t\t\tdata ={{\r\n\t\t\t\tlabels: dailyData.map(({ date }) => date),\r\n\t\t\t\tdatasets: [{\r\n\t\t\t\t\tdata: dailyData.map(({confirmed}) => confirmed),\r\n\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\tborderColor: '#3333ff',\r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t} , {\r\n\t\t\t\t\tdata: dailyData.map(({deaths}) => deaths),\r\n\t\t\t\t\tlabel: 'Deaths',\r\n\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n\t\t\t\t\tfill: true,\r\n\t\t\t\t}],\r\n\t\t\t}}\r\n\t\t/> ) : null\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{country ? barChart : lineChart}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './countryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api/api';\r\nconst CountryPicker = ({ handleChangeCountry }) => {\r\n\tconst [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCountriesAPI = async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries())\r\n\t\t}\r\n\r\n\t\tfetchCountriesAPI();\r\n\t}, [setFetchedCountries]);\r\n\r\n\treturn (\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t\t<NativeSelect defaultValue = \"\" onChange = {(e) => handleChangeCountry(e.target.value)}>\r\n\t\t\t\t<option value=\"\">Global</option>\r\n\t\t\t\t{fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n\t\t\t</NativeSelect>\r\n\t\t</FormControl>\r\n\t)\r\n}\r\n\r\nexport default CountryPicker;","import React, {Component} from 'react';\r\nimport { Cards , Chart, CountryPicker} from './components';\r\nimport { fetchData } from './api/api';\r\n\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\tcountry: '',\r\n\t}\r\n\r\n\thandleChangeCountry = async (country) => {\r\n\t\tconst fetchedData = await fetchData(country);\r\n\t\tthis.setState({data: fetchedData, country: country});\r\n\t}\r\n\r\n\r\n\r\n\tasync componentDidMount(){\r\n\t\tconst fetchedData = await fetchData();\r\n\t\tthis.setState({ data: fetchedData});\r\n\t}\r\n\r\n\trender(){\r\n\r\n\t\tconst { data, country } = this.state;\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className={styles.container}>\r\n\t\t\t\t\t<h1 className = {styles.header}>COVID-19 TRACKER</h1>\r\n\t\t\t\t\t<CountryPicker handleChangeCountry ={this.handleChangeCountry}/>\r\n\t\t\t\t\t<Cards data = { data } />\r\n\t\t\t\t\t<Chart data={data} country={country}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__28f78\",\"container\":\"App_container__2Dvm5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__3xbaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countryPicker_formControl__1UyUv\"};"],"sourceRoot":""}